<tapp>
    <testcase name="Make emergency call when there is no available call objects">
        <action type="pause">1000</action>
        <!-- Initiate a call -->
        <action type="issue at">ATD18055643424;</action>
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_INITIATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                    <to type="string">sip:18055643424@foundry.att.com</to>
                    <from type="string">4043351655@private.att.net@foundry.att.com</from>
                </call>
            </isip>
        </action>
        <!-- issue isip trying with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">0</id>
                <protocol type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TRYING</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                </call>
            </isip>
        </action>
        <!--  AT infc verify receiving OK -->
        <action type="validate at" timeout="2000">0&#xD;</action>
        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="5000">+CLCC: 1,0,2,0,0,"18055643424",129&#xD;&#xA;</action>
        <action type="validate at" timeout="5000">0&#xD;</action>

        <!-- issue isip to ACK call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="5000">+CLCC: 1,0,3,0,0,"18055643424",129&#xD;&#xA;</action>
        <action type="validate at" timeout="5000">0&#xD;</action>

        <!-- issue isip to accept call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACCEPT</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  issue accept ack with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">0</id>
                <protocol  type="int">0</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACCEPT_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="2000">+CLCC: 1,0,0,0,0,"18055643424",129&#xD;&#xA;</action>
        <action type="validate at" timeout="2000">0&#xD;</action>

        <!-- caller hold -->
        <action type="issue at">AT+CHLD=2</action>
        <!--  ISIP Valide CALL HOLD -->
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_HOLD</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <!-- issue isip to accept call hold with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_HOLD</reason>
                    <status type="enum">ISIP_STATUS_DONE</status>
                </call>
            </isip>
        </action>
        <!--  AT infc verify receiving the response that call hold done. -->
        <action type="validate at" timeout="2000">0&#xD;</action>
        <!-- AT to places a second call  -->
        <!-- Initiate a call -->
        <action type="issue at">ATD13122099351;</action>
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_INITIATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                    <to type="string">sip:13122099351@foundry.att.com</to>
                    <from type="string">4043351655@private.att.net@foundry.att.com</from>
                </call>
            </isip>
        </action>
        <!-- issue isip trying with second id index = 1 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">1</id>
                <protocol type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TRYING</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  AT infc verify receiving OK -->
        <action type="validate at" timeout="2000">0&#xD;</action>
        <!-- issue isip to ACK call with id index = 1 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">1</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!-- issue isip to accept call with id index = 1 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">1</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACCEPT</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  issue accept ack with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">1</id>
                <protocol  type="int">0</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACCEPT_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="2000">+CLCC: 1,0,1,0,0,"18055643424",129&#xD;&#xA;+CLCC: 2,0,0,0,0,"13122099351",129&#xD;&#xA;</action>
        <action type="validate at" timeout="2000">0&#xD;</action>

        <!-- Now we have two csm call objects, let's have an incoming call now -->
        <!-- Issue an incoming call to CSM -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_INITIATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                    <from type="string">sip:13122099352@domain.com"</from>
                    <subject type="string">Whatever</subject>
                </call>
            </isip>
        </action>
        <!-- issue isip trying with id index = 0 -->
        <action type="validate isip" timeout="2000">
        <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">2</id>
                <protocol type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  AT infc verify receiving Ring -->
        <action type="validate at" timeout="2000">+CCWA: "13122099352",129,,,&#xD;</action>
        <!-- ISIP issue ACK to CSM -->
        <action type="issue isip">
             <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">0</id>
                <protocol type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACK</reason>
                    <status type="enum">ISIP_STATUS_DONE</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!-- AT infc verify receiving the response. -->
        <action type="validate at" timeout="2000">+CLCC: 1,0,1,0,0,"18055643424",129&#xD;&#xA;+CLCC: 2,0,0,0,0,"13122099351",129&#xD;&#xA;+CLCC: 3,1,5,0,0,"13122099352",129&#xD;&#xA;</action>
        <action type="validate at" timeout="2000">0&#xD;</action>

        <!-- Let's make a emergnecy call now -->
        <action type="issue at">ATD112;</action>
        <!-- Validate if CSM terminate existing call -->
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <!-- issue isip to accept call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_DONE</status>
                </call>
            </isip>
        </action>
        <!-- Validate if CSM terminate existing call -->
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol type="int">0</protocol>
                <id type="int">1</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <!-- issue isip to accept call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">1</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_DONE</status>
                </call>
            </isip>
        </action>
        <!-- Validate if CSM terminate existing call -->
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol type="int">0</protocol>
                <id type="int">2</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!-- issue isip to accept call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">2</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_DONE</status>
                </call>
            </isip>
        </action>
        <action type="validate at" timeout="2000">3&#xD;</action>
        <action type="validate at" timeout="2000">3&#xD;</action>

        <!-- Initiate emergency call --> 
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_INITIATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <type type="enum">ISI_SESSION_TYPE_EMERGENCY</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                    <to type="string">sip:112@foundry.att.com</to>
                    <from type="string">4043351655@private.att.net@foundry.att.com</from>
                    <serviceId type="int">0</serviceId>
                </call>
            </isip>
        </action>
        <!-- issue isip trying with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">0</id>
                <protocol type="int">1</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TRYING</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <type type="enum">ISI_SESSION_TYPE_EMERGENCY</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  AT infc verify receiving OK -->
        <action type="validate at" timeout="2000">0&#xD;</action>

        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="5000">+CLCC: 4,0,2,0,0,"112",129&#xD;&#xA;</action>
        <action type="validate at" timeout="5000">0&#xD;</action>

        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="5000">+CLCC: 4,0,2,0,0,"112",129&#xD;&#xA;</action>
        <action type="validate at" timeout="5000">0&#xD;</action>

        <!--  issue isip to ACK call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <type type="enum">ISI_SESSION_TYPE_EMERGENCY</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="5000">+CLCC: 4,0,3,0,0,"112",129&#xD;&#xA;</action>
        <action type="validate at" timeout="5000">0&#xD;</action>
        <!--  issue isip to accept call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACCEPT</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                    <type type="enum">ISI_SESSION_TYPE_AUDIO</type>
                    <type type="enum">ISI_SESSION_TYPE_EMERGENCY</type>
                    <audioDirection type="enum">ISI_SESSION_DIR_SEND_RECV</audioDirection>
                </call>
            </isip>
        </action>
        <!--  issue accept ack with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <id type="int">0</id>
                <protocol  type="int">0</protocol>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_ACCEPT_ACK</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <action type="pause">10</action>
        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the response. -->
        <action type="validate at" timeout="2000">+CLCC: 4,0,0,0,0,"112",129&#xD;&#xA;</action>
        <action type="validate at" timeout="2000">0&#xD;</action>
        <!-- caller Disconnects -->
        <action type="issue at">ATH</action>
        <!--  AT infc verify receiving OK -->
        <action type="validate isip" timeout="2000">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_INVALID</status>
                </call>
            </isip>
        </action>
        <!-- issue isip to accept call with id index = 0 -->
        <action type="issue isip">
            <isip>
                <code type="enum">ISIP_CODE_CALL</code>
                <protocol  type="int">0</protocol>
                <id type="int">0</id>
                <call>
                    <reason type="enum">ISIP_CALL_REASON_TERMINATE</reason>
                    <status type="enum">ISIP_STATUS_DONE</status>
                </call>
            </isip>
        </action>
        <action type="validate at" timeout="2000">0&#xD;</action>

        <!--  AT send AT+CLCC to request the state of the calls. -->
        <action type="issue at">AT+CLCC</action>
        <!--  AT infc verify receiving the respons. -->
        <action type="validate at" timeout="2000">0&#xD;</action>
    </testcase>
</tapp>
