/*
 * THIS IS AN UNPUBLISHED WORK CONTAINING D2 TECHNOLOGIES, INC. CONFIDENTIAL
 * AND PROPRIETARY INFORMATION.  IF PUBLICATION OCCURS, THE FOLLOWING NOTICE
 * APPLIES: "COPYRIGHT 2004 D2 TECHNOLOGIES, INC. ALL RIGHTS RESERVED"
 *
 * $D2Tech$ $Rev: 12486 $ $Date: 2010-07-08 06:10:49 +0800 (Thu, 08 Jul 2010) $
 *
 */

/** \file
 * \brief API for XML document generation.
 *  
 * This file contains helper functions to deal with XML documents and their
 * handles.
 */

#ifndef _XCAP_XML_HELPER_H_
#define _XCAP_XML_HELPER_H_

#include <osal.h>

/** \typedef XCAP_Xml
 * \brief Handle used to manipulate XCAP XML documents and their parts
 */
typedef void * XCAP_Xml;

/*
 * Function prototypes.
 */

/** \fn char *XCAP_xmlHelperMakeDocument(
 *          XCAP_Xml     xml,
 *          OSAL_Boolean hasHdr)
 * \brief Generate an XML document from an XML handle.
 * 
 * User prepares XML document using XML handles, then converts the XML document
 * represented by its handle to a XML document is a character buffer to be
 * stored or sent to server.\n
 * Note: User must call #XCAP_xmlHelperFreeDocument to free the buffers 
 * after the XML document prepared by this function is not needed.
 * @param xml Handle to an XML document
 * @param hasHdr OSAL_TRUE to add a header, OSAL_FALSE to add no header.
 * @return Pointer to a buffer where XML document is prepared, or NULL if
 * failed. String returned is NULL terminated.
 */
char *XCAP_xmlHelperMakeDocument(
    XCAP_Xml     xml,
    OSAL_Boolean hasHdr);

/** \fn char *XCAP_xmlHelperFreeDocument(
 *          char **doc_ptr)
 * \brief Delete an XML document.
 * 
 * User must call this function to free the buffers generated by call to
 * #XCAP_xmlHelperMakeDocument after the XML document prepared by that function
 * is not needed.
 * @param doc_ptr Pointer to the pointer of XML document. *doc_ptr must equal
 * value returned by previous call to #XCAP_xmlHelperMakeDocument.
 * @return void 
 */
void XCAP_xmlHelperFreeDocument(
    char **doc_ptr);

/** \fn char *XCAP_xmlHelperDeleteHandle(
 *          XCAP_Xml *handle_ptr)
 * \brief Delete an XML document handle.
 * 
 * User must call this function to free the buffers generated by call to
 * any XML data generation calls. Some examples of such calls are: \n
 * #XCAP_xmlParulesCreateDocument\n
 * #XCAP_xmlRlsCreateDocument\n
 * #XCAP_xmlReslistCreateDocument\n
 * Other handles in XML heirarchy can be deleted, but this function must not be
 * called to free handles that were automatically freed when their parents were
 * freed.\n
 * When a parent handle is freed, all its children are freed as well.
 * @param handle_ptr Pointer to the XML document handle.
 * @return void 
 */
void XCAP_xmlHelperDeleteHandle(
    XCAP_Xml *xml_ptr);

#endif
