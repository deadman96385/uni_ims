#include "vp8_blockd.h"
#include "sc8810_video_header.h"

void vp8_recon_b_c
(
    unsigned char *pred_ptr,
    short *diff_ptr,
    unsigned char *dst_ptr,
    int stride
)
{
    int r, c;

    for (r = 0; r < 4; r++)
    {
        for (c = 0; c < 4; c++)
        {
            int a = diff_ptr[c] + pred_ptr[c] ;

            if (a < 0)
                a = 0;

            if (a > 255)
                a = 255;

            dst_ptr[c] = (unsigned char) a ;
        }

        dst_ptr += stride;
        diff_ptr += 16;
        pred_ptr += 16;
    }
}

void vp8_recon4b_c
(
    unsigned char *pred_ptr,
    short *diff_ptr,
    unsigned char *dst_ptr,
    int stride
)
{
    int r, c;

    for (r = 0; r < 4; r++)
    {
        for (c = 0; c < 16; c++)
        {
            int a = diff_ptr[c] + pred_ptr[c] ;

            if (a < 0)
                a = 0;

            if (a > 255)
                a = 255;

            dst_ptr[c] = (unsigned char) a ;
        }

        dst_ptr += stride;
        diff_ptr += 16;
        pred_ptr += 16;
    }
}

void vp8_recon2b_c
(
    unsigned char *pred_ptr,
    short *diff_ptr,
    unsigned char *dst_ptr,
    int stride
)
{
    int r, c;

    for (r = 0; r < 4; r++)
    {
        for (c = 0; c < 8; c++)
        {
            int a = diff_ptr[c] + pred_ptr[c] ;

            if (a < 0)
                a = 0;

            if (a > 255)
                a = 255;

            dst_ptr[c] = (unsigned char) a ;
        }

        dst_ptr += stride;
        diff_ptr += 8;
        pred_ptr += 8;
    }
}

void vp8_recon16x16mb(MACROBLOCKD *x)
{
    int i;
#if defined(VP8_MCA_DEBUG)
	int j;
	FILE* fp = fopen("..\\..\\test_vectors\\ref_mca_out.log","wb");
#endif
    for (i = 0; i < 16; i += 4)
    {
        BLOCKD *b = &x->block[i];
#if defined(VP8_MCA_DEBUG)	
		{
			if(!(x->frame_type == KEY_FRAME || x->mbmi.ref_frame == INTRA_FRAME))
			{ 
				
				uint8 * predic= b->predictor;
				
				for(j = 0;j < 16; j++)
					{
						FomatPrint4Pix(predic, fp);
						predic += 4;
					}			
			}
		}
#endif

        vp8_recon4b_c(b->predictor, b->diff, *(b->base_dst) + b->dst, b->dst_stride);
    }

    for (i = 16; i < 24; i += 2)
    {
        BLOCKD *b = &x->block[i];
#if defined(VP8_MCA_DEBUG)	
		{
		if(x->frame_type != KEY_FRAME || x->mbmi.ref_frame != INTRA_FRAME)
			{
			uint8 * predic= b->predictor;
			
			for(j = 0;j < 8; j++)
				{
					FomatPrint4Pix(predic, fp);
					predic += 4;
				}	
			}
	}
#endif
        vp8_recon2b_c(b->predictor, b->diff, *(b->base_dst) + b->dst, b->dst_stride);
    }
#if defined(VP8_MCA_DEBUG)
	fclose(fp);
#endif
}
